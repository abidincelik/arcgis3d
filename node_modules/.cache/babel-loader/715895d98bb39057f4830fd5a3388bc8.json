{"ast":null,"code":"var _jsxFileName = \"/Users/abidin/Desktop/arcgis/src/components/WebMapView.js\";\nimport React from 'react';\nimport { loadModules, loadCss } from 'esri-loader';\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const options = {\n      css: true,\n      // insert the stylesheet link above the first <style> tag on the page\n      insertCssBefore: 'style'\n    }; // or a from specific URL, like a locally hosted version\n\n    loadCss('https://js.arcgis.com/4.13/esri/themes/dark-blue/main.css', 'style'); // lazy load the required ArcGIS API for JavaScript modules and CSS\n\n    loadModules(['esri/WebScene', 'esri/views/SceneView'], options).then(([WebScene, SceneView]) => {\n      const map = new WebScene({\n        portalItem: {\n          // autocasts as new PortalItem()\n          id: \"ac68b33deea84c15bc26f408f3c413fd\",\n          portal: {\n            url: \"https://cbs.mugla.bel.tr/portal\"\n          }\n        }\n      });\n      this.view = new SceneView({\n        container: this.mapRef.current,\n        map: map\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"webmap\",\n      ref: this.mapRef,\n      style: {\n        width: '100vw',\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/abidin/Desktop/arcgis/src/components/WebMapView.js"],"names":["React","loadModules","loadCss","WebMapView","Component","constructor","props","mapRef","createRef","componentDidMount","options","css","insertCssBefore","then","WebScene","SceneView","map","portalItem","id","portal","url","view","container","current","render","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,aAArC;AAIA,OAAO,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAcP,KAAK,CAACQ,SAAN,EAAd;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAElB,UAAMC,OAAO,GAAG;AACdC,MAAAA,GAAG,EAAE,IADS;AAEd;AACAC,MAAAA,eAAe,EAAE;AAHH,KAAhB,CAFkB,CASlB;;AACAV,IAAAA,OAAO,CAAC,2DAAD,EAA8D,OAA9D,CAAP,CAVkB,CAalB;;AACAD,IAAAA,WAAW,CAAC,CAAC,eAAD,EAAkB,sBAAlB,CAAD,EAA4CS,OAA5C,CAAX,CACGG,IADH,CACQ,CAAC,CAACC,QAAD,EAAWC,SAAX,CAAD,KAA2B;AAC/B,YAAMC,GAAG,GAAG,IAAIF,QAAJ,CAAa;AACvBG,QAAAA,UAAU,EAAE;AACV;AACAC,UAAAA,EAAE,EAAE,kCAFM;AAGVC,UAAAA,MAAM,EAAE;AACNC,YAAAA,GAAG,EAAE;AADC;AAHE;AADW,OAAb,CAAZ;AAUA,WAAKC,IAAL,GAAY,IAAIN,SAAJ,CAAc;AACxBO,QAAAA,SAAS,EAAE,KAAKf,MAAL,CAAYgB,OADC;AAExBP,QAAAA,GAAG,EAAEA;AAFmB,OAAd,CAAZ;AAID,KAhBH;AAiBD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,GAAG,EAAE,KAAKjB,MAAlC;AAA0C,MAAA,KAAK,EAAE;AAAEkB,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF;AAID;;AA5C6C","sourcesContent":["import React from 'react';\nimport { loadModules, loadCss } from 'esri-loader';\n\n\n\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n  }\n\n  componentDidMount() {\n\n    const options = {\n      css: true,\n      // insert the stylesheet link above the first <style> tag on the page\n      insertCssBefore: 'style'\n    };\n\n\n    // or a from specific URL, like a locally hosted version\n    loadCss('https://js.arcgis.com/4.13/esri/themes/dark-blue/main.css', 'style');\n\n\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    loadModules(['esri/WebScene', 'esri/views/SceneView'], options)\n      .then(([WebScene, SceneView]) => {\n        const map = new WebScene({\n          portalItem: {\n            // autocasts as new PortalItem()\n            id: \"ac68b33deea84c15bc26f408f3c413fd\",\n            portal: {\n              url: \"https://cbs.mugla.bel.tr/portal\"\n            }\n          }\n        });\n\n        this.view = new SceneView({\n          container: this.mapRef.current,\n          map: map,\n        });\n      });\n  }\n\n  render() {\n    return (\n\n      <div className=\"webmap\" ref={this.mapRef} style={{ width: '100vw', height: '100vh' }} />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}