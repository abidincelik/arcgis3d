{"ast":null,"code":"var _jsxFileName = \"/Users/abidin/Desktop/arcgis/src/components/Arcgis3D.js\";\nimport React from 'react';\nimport LogoImage from '../logo.png';\nimport { loadModules, loadCss } from 'esri-loader';\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n  }\n\n  componentDidMount() {\n    loadCss('https://js.arcgis.com/4.13/esri/themes/dark-blue/main.css');\n    loadModules(['esri/Map', 'esri/WebScene', 'esri/views/SceneView', 'esri/layers/SceneLayer', 'esri/layers/FeatureLayer', 'esri/widgets/Search', 'esri/widgets/Legend', 'esri/layers/Layer', 'esri/widgets/LayerList', 'esri/core/Collection', 'esri/widgets/Expand', \"esri/PopupTemplate\", 'esri/portal/PortalItem', 'esri/widgets/Locate', 'esri/Graphic']).then(([Map, WebScene, SceneView, SceneLayer, FeatureLayer, Search, Legend, Layer, LayerList, Collection, Expand, PopupTemplate, PortalItem, Locate, Graphic]) => {\n      var map = new Map({\n        basemap: \"satellite\",\n        ground: \"world-elevation\"\n      });\n      var yollar = new FeatureLayer({\n        title: \"Yollar\",\n        url: \"https://muglacbs.mugla.bel.tr/cbs/rest/services/MABS/Mabs_View_Yol/MapServer/0\",\n        outFields: [\"YOLADI\", \"YOLTIP\"],\n        popupTemplate: {\n          title: \"Yol\",\n          content: \"<p>Yol Tipi : {YOLTIP}</p><p>Yol Adı : {YOLADI}</p>\"\n        }\n      });\n      map.add(yollar);\n      var binalar = new SceneLayer({\n        title: \"Binalar\",\n        url: \"https://cbs.mugla.bel.tr/cbs/rest/services/Hosted/Yapilar3D_2/SceneServer\",\n        outFields: [\"KATADEDI\", \"AD\", \"KIMLIKNO\", \"TIP\", \"DURUM\"],\n        popupTemplate: {\n          // Enable a popup\n          title: \"Bina\",\n          // Show attribute value\n          content: \"<p>Tip : {TIP}</p><p>Durum : {DURUM}</p><p>Bina Adı : {AD}</p><p>Kimlik No : {KIMLIKNO}</p><p>Kat Adedi : {KATADEDI}</p>\"\n        },\n        definitionExpression: \"KATADEDI > 0\"\n      });\n      map.add(binalar);\n      this.view = new SceneView({\n        container: this.mapRef.current,\n        map: map,\n        camera: {\n          position: {\n            x: 28.365316,\n            y: 37.150000,\n            z: 15000\n          },\n          tilt: 25\n        }\n      });\n      var symbolbinalar = {\n        type: \"mesh-3d\",\n        symbolLayers: [{\n          type: \"fill\",\n          material: {\n            color: [255, 170, 2]\n          },\n          edges: {\n            type: \"solid\",\n            color: \"black\"\n          }\n        }]\n      };\n      binalar.renderer = {\n        type: \"simple\",\n        symbol: symbolbinalar\n      };\n      var search = new Search({\n        view: this.view\n      });\n      var Katmanlar = new LayerList({\n        view: this.view\n      });\n      var LayerExpand = new Expand({\n        view: this.view,\n        content: Katmanlar\n      });\n      var legend = new Legend({\n        view: this.view,\n        layerInfos: [{\n          layer: map\n        }]\n      });\n      var LegendExpand = new Expand({\n        view: this.view,\n        content: legend\n      });\n      var locateWidget = new Locate({\n        view: this.view,\n        graphic: new Graphic({\n          symbol: {\n            type: \"simple-marker\"\n          }\n        })\n      });\n      this.view.ui.add(\"logoDiv\", \"bottom-right\");\n      this.view.ui.add(locateWidget, \"top-left\");\n      this.view.ui.add(search, \"top-right\");\n      this.view.ui.add(LegendExpand, \"top-right\");\n      this.view.ui.add(LayerExpand, \"top-right\");\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"webmap\",\n      ref: this.mapRef,\n      style: {\n        width: '100vw',\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"logoDiv\",\n      className: \"esri-widget\",\n      style: {\n        backgroundImage: \"url(\".concat(LogoImage, \")\"),\n        textAlign: \"center\",\n        width: '400px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"dwdw\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/abidin/Desktop/arcgis/src/components/Arcgis3D.js"],"names":["React","LogoImage","loadModules","loadCss","WebMapView","Component","constructor","props","mapRef","createRef","componentDidMount","then","Map","WebScene","SceneView","SceneLayer","FeatureLayer","Search","Legend","Layer","LayerList","Collection","Expand","PopupTemplate","PortalItem","Locate","Graphic","map","basemap","ground","yollar","title","url","outFields","popupTemplate","content","add","binalar","definitionExpression","view","container","current","camera","position","x","y","z","tilt","symbolbinalar","type","symbolLayers","material","color","edges","renderer","symbol","search","Katmanlar","LayerExpand","legend","layerInfos","layer","LegendExpand","locateWidget","graphic","ui","render","width","height","backgroundImage","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport LogoImage from '../logo.png'\nimport { loadModules, loadCss } from 'esri-loader';\n\n\n\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n  }\n\n  componentDidMount() {\n    loadCss('https://js.arcgis.com/4.13/esri/themes/dark-blue/main.css');\n\n    loadModules([\n      'esri/Map',\n      'esri/WebScene',\n      'esri/views/SceneView',\n      'esri/layers/SceneLayer',\n      'esri/layers/FeatureLayer',\n      'esri/widgets/Search',\n      'esri/widgets/Legend',\n      'esri/layers/Layer',\n      'esri/widgets/LayerList',\n      'esri/core/Collection',\n      'esri/widgets/Expand',\n      \"esri/PopupTemplate\",\n      'esri/portal/PortalItem',\n      'esri/widgets/Locate',\n      'esri/Graphic'\n    ])\n      .then(([\n        Map,\n        WebScene,\n        SceneView,\n        SceneLayer,\n        FeatureLayer,\n        Search,\n        Legend,\n        Layer,\n        LayerList,\n        Collection,\n        Expand,\n        PopupTemplate,\n        PortalItem,\n        Locate,\n        Graphic\n      ]) => {\n        var map = new Map({\n          basemap: \"satellite\",\n          ground: \"world-elevation\"  \n        });\n\n        var yollar = new FeatureLayer({\n          title : \"Yollar\",\n          url: \"https://muglacbs.mugla.bel.tr/cbs/rest/services/MABS/Mabs_View_Yol/MapServer/0\",\n          outFields: [\"YOLADI\",\"YOLTIP\"],\n          popupTemplate: {  \n            title: \"Yol\",\n            content:  \"<p>Yol Tipi : {YOLTIP}</p><p>Yol Adı : {YOLADI}</p>\"\n          },\n\n        });\n\n        map.add(yollar);\n\n        var binalar = new SceneLayer({\n          title: \"Binalar\",\n          url: \"https://cbs.mugla.bel.tr/cbs/rest/services/Hosted/Yapilar3D_2/SceneServer\",\n          outFields: [\"KATADEDI\",\"AD\",\"KIMLIKNO\",\"TIP\",\"DURUM\"],\n          popupTemplate: {  // Enable a popup\n              title: \"Bina\", // Show attribute value\n              content: \"<p>Tip : {TIP}</p><p>Durum : {DURUM}</p><p>Bina Adı : {AD}</p><p>Kimlik No : {KIMLIKNO}</p><p>Kat Adedi : {KATADEDI}</p>\"\n          },\n          definitionExpression: \"KATADEDI > 0\",\n\n        });\n\n        map.add(binalar);\n\n        this.view = new SceneView({\n          container: this.mapRef.current,\n          map: map,\n          camera: {\n            position: { \n              x: 28.365316,\n              y: 37.150000,\n              z: 15000 \n            },\n            tilt: 25 \n          }\n        });\n\n        var symbolbinalar = {\n          type: \"mesh-3d\",\n          symbolLayers: [\n            {\n              type: \"fill\", \n              material: {\n                color: [255, 170, 2]\n              },\n              edges: {\n                type: \"solid\", \n                color: \"black\"\n              }\n            },\n          ]\n        };\n        \n        binalar.renderer = {\n          type: \"simple\", \n          symbol: symbolbinalar\n        };\n\n        var search = new Search({\n          view: this.view\n        });\n\n        var Katmanlar = new LayerList({\n          view: this.view,\n        });\n\n        var LayerExpand = new Expand({\n          view: this.view,\n          content: Katmanlar,\n        });\n\n        var legend = new Legend({\n          view: this.view,\n          layerInfos: [{\n            layer: map,\n          }]\n        });\n\n        var LegendExpand = new Expand({\n          view: this.view,\n          content: legend,\n        });\n\n        var locateWidget = new Locate({\n          view: this.view,\n          graphic: new Graphic({\n            symbol: { type: \"simple-marker\" } \n          })\n        });\n\n        this.view.ui.add(\"logoDiv\", \"bottom-right\");\n        this.view.ui.add(locateWidget, \"top-left\");\n        this.view.ui.add(search, \"top-right\");\n        this.view.ui.add(LegendExpand, \"top-right\");\n        this.view.ui.add(LayerExpand, \"top-right\")\n\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"webmap\" ref={this.mapRef} style={{ width: '100vw', height: '100vh' }}>\n         <div id=\"logoDiv\" className=\"esri-widget\" style={ {backgroundImage: `url(${LogoImage})`, textAlign: \"center\",\n        width: '400px' }}>dwdw</div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}