{"ast":null,"code":"var _jsxFileName = \"/Users/abidin/Desktop/arcgis/src/components/WebMapView.js\";\nimport React from 'react';\nimport { loadModules, loadCss } from 'esri-loader';\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n  }\n\n  componentDidMount() {\n    loadCss('https://js.arcgis.com/4.13/esri/themes/dark-blue/main.css');\n    loadModules(['esri/WebScene', 'esri/views/SceneView', 'esri/portal/PortalItem', 'esri/widgets/Search', 'esri/layers/Layer', 'esri/widgets/Legend', 'esri/widgets/LayerList', 'esri/widgets/Expand', \"esri/PopupTemplate\"]).then(([WebScene, SceneView, PortalItem, Search, Legend, LayerList, Expand, PopupTemplate, Layer]) => {\n      const map = new WebScene({\n        portalItem: {\n          // autocasts as new PortalItem()\n          id: \"ac68b33deea84c15bc26f408f3c413fd\",\n          portal: {\n            url: \"https://cbs.mugla.bel.tr/portal\"\n          }\n        }\n      });\n      this.view = new SceneView({\n        container: this.mapRef.current,\n        map: map\n      });\n      var search = new Search({\n        view: this.view\n      });\n      var Katmanlar = new LayerList({\n        view: this.view\n      });\n      var LayerExpand = new Expand({\n        view: this.view,\n        content: Katmanlar\n      });\n      var legend = new Legend({\n        view: this.view,\n        layerInfos: [{\n          layer: map\n        }]\n      });\n      var LegendExpand = new Expand({\n        view: this.view,\n        content: legend\n      });\n      var item = new PortalItem({\n        id: \"d7892b3c13b44391992ecd42bfa92d01\"\n      });\n      Layer.fromPortalItem({\n        portalItem: {\n          // autocasts as new PortalItem()\n          id: \"ac68b33deea84c15bc26f408f3c413fd\"\n        }\n      }).then(function (layer) {\n        var pTemplate = {\n          content: \"deneme\",\n          title: \"deneme\"\n        };\n        layer.popupTemplate = pTemplate;\n      });\n      console.log(Layer);\n      this.view.ui.add(search, \"top-right\");\n      this.view.ui.add(LegendExpand, \"top-right\");\n      this.view.ui.add(LayerExpand, \"top-right\");\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"webmap\",\n      ref: this.mapRef,\n      style: {\n        width: '100vw',\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/abidin/Desktop/arcgis/src/components/WebMapView.js"],"names":["React","loadModules","loadCss","WebMapView","Component","constructor","props","mapRef","createRef","componentDidMount","then","WebScene","SceneView","PortalItem","Search","Legend","LayerList","Expand","PopupTemplate","Layer","map","portalItem","id","portal","url","view","container","current","search","Katmanlar","LayerExpand","content","legend","layerInfos","layer","LegendExpand","item","fromPortalItem","pTemplate","title","popupTemplate","console","log","ui","add","render","width","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { loadModules, loadCss } from 'esri-loader';\n\n\n\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n  }\n\n  componentDidMount() {\n    loadCss('https://js.arcgis.com/4.13/esri/themes/dark-blue/main.css');\n\n    loadModules([\n      'esri/WebScene',\n      'esri/views/SceneView',\n      'esri/portal/PortalItem',\n      'esri/widgets/Search',\n      'esri/layers/Layer',\n      'esri/widgets/Legend',\n      'esri/widgets/LayerList',\n      'esri/widgets/Expand',\n      \"esri/PopupTemplate\"\n    ])\n      .then(([\n        WebScene,\n        SceneView,\n        PortalItem,\n        Search,\n        Legend,\n        LayerList,\n        Expand,\n        PopupTemplate,\n        Layer\n      ]) => {\n\n        const map = new WebScene({\n          portalItem: {\n            // autocasts as new PortalItem()\n            id: \"ac68b33deea84c15bc26f408f3c413fd\",\n            portal: {\n              url: \"https://cbs.mugla.bel.tr/portal\"\n            },\n          }\n        });\n\n        this.view = new SceneView({\n          container: this.mapRef.current,\n          map: map,\n        });\n\n        var search = new Search({\n          view: this.view\n        });\n\n        var Katmanlar = new LayerList({ view: this.view });\n\n        var LayerExpand = new Expand({\n          view: this.view,\n          content: Katmanlar,\n        });\n\n        var legend = new Legend({\n          view: this.view,\n          layerInfos: [{\n            layer: map,\n          }]\n        });\n\n        var LegendExpand = new Expand({\n          view: this.view,\n          content: legend,\n        });\n\n        var item = new PortalItem({\n          id: \"d7892b3c13b44391992ecd42bfa92d01\"\n        });\n      \n        Layer.fromPortalItem({\n          portalItem: {\n            // autocasts as new PortalItem()\n            id: \"ac68b33deea84c15bc26f408f3c413fd\"\n          }\n        }).then(function(layer) {\n\n          var pTemplate = {  \n            content: \"deneme\",  \n            title: \"deneme\"  \n          };  \n          layer.popupTemplate = pTemplate;\n        });\n\n\n      \n        console.log(Layer)\n          \n        \n\n        this.view.ui.add(search, \"top-right\");\n        this.view.ui.add(LegendExpand, \"top-right\");\n        this.view.ui.add(LayerExpand, \"top-right\");\n\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"webmap\" ref={this.mapRef} style={{ width: '100vw', height: '100vh' }} />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}