{"ast":null,"code":"var _jsxFileName = \"/Users/abidin/Desktop/arcgis/src/components/Arcgis3D.js\";\nimport React from 'react';\nimport LogoImage from '../logo.png';\nimport { loadModules, loadCss } from 'esri-loader';\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n  }\n\n  componentDidMount() {\n    loadCss('https://js.arcgis.com/4.13/esri/themes/dark-blue/main.css');\n    loadModules(['esri/Map', 'esri/WebScene', 'esri/views/SceneView', 'esri/layers/SceneLayer', 'esri/layers/FeatureLayer', 'esri/widgets/Search', 'esri/widgets/Legend', 'esri/layers/Layer', 'esri/widgets/LayerList', 'esri/core/Collection', 'esri/widgets/Expand', \"esri/PopupTemplate\", 'esri/portal/PortalItem', 'esri/widgets/Locate', 'esri/Graphic', 'esri/tasks/support/Query']).then(([Map, WebScene, SceneView, SceneLayer, FeatureLayer, Search, Legend, Layer, LayerList, Collection, Expand, PopupTemplate, PortalItem, Locate, Graphic, Query]) => {\n      var map = new Map({\n        basemap: \"satellite\",\n        ground: \"world-elevation\"\n      });\n      var yollar = new FeatureLayer({\n        title: \"Yollar\",\n        url: \"https://muglacbs.mugla.bel.tr/cbs/rest/services/MABS/Mabs_View_Yol/MapServer/0\",\n        outFields: [\"YOLADI\", \"YOLTIP\"],\n        popupTemplate: {\n          title: \"Yol\",\n          content: \"<p>Yol Tipi : {YOLTIP}</p><p>Yol Adı : {YOLADI}</p>\"\n        }\n      });\n      var binalar = new SceneLayer({\n        title: \"Binalar\",\n        url: \"https://cbs.mugla.bel.tr/cbs/rest/services/Hosted/Yapilar3D_2/SceneServer\",\n        outFields: [\"KATADEDI\", \"AD\", \"KIMLIKNO\", \"TIP\", \"DURUM\"],\n        popupTemplate: {\n          title: \"Bina\",\n          content: \"<p>Tip : {TIP}</p><p>Durum : {DURUM}</p><p>Bina Adı : {AD}</p><p>Kimlik No : {KIMLIKNO}</p><p>Kat Adedi : {KATADEDI}</p>\"\n        },\n        definitionExpression: \"KATADEDI > 0\"\n      });\n      var kapinumaralari = new FeatureLayer({\n        title: \"Kapı Numaraları\",\n        url: \"https://muglacbs.mugla.bel.tr/cbs/rest/services/MABS/Mabs_View/MapServer/0\",\n        outFields: [\"ILCEADI\", \"MAHALLEADI\", \"YOLADI\", \"YOLTIPI\", \"KAPINO\"],\n        popupTemplate: {\n          title: \"Kapı Bilgileri\",\n          content: \"<p>İlçe : {ILCEADI}</p><p>Mahalle : {MAHALLEADI}</p><p>CSBM : {YOLADI}</p><p>Yol Tipi : {YOLTIPI}</p><p>Kapı No : {KAPINO}</p>\"\n        },\n        elevationInfo: {\n          mode: \"relative-to-scene\"\n        },\n        screenSizePerspectiveEnabled: false,\n        featureReduction: {\n          type: \"selection\"\n        }\n      });\n      map.add(binalar);\n      map.add(yollar);\n      map.add(kapinumaralari);\n      this.view = new SceneView({\n        container: this.mapRef.current,\n        map: map,\n        camera: {\n          position: {\n            x: 28.365316,\n            y: 37.150000,\n            z: 15000\n          },\n          tilt: 25\n        }\n      });\n      var symbolbinalar = {\n        type: \"mesh-3d\",\n        symbolLayers: [{\n          type: \"fill\",\n          material: {\n            color: [255, 170, 2]\n          },\n          edges: {\n            type: \"solid\",\n            color: \"black\"\n          }\n        }]\n      };\n      var symbolkapino = {\n        type: \"point-3d\",\n        symbolLayers: [{\n          type: \"icon\",\n          resource: {\n            href: \"/door.png\"\n          },\n          size: 25,\n          outline: {\n            color: \"black\",\n            size: 2\n          }\n        }],\n        verticalOffset: {\n          screenLength: 10,\n          maxWorldLength: 100,\n          minWorldLength: 35\n        },\n        callout: {\n          type: \"line\",\n          color: \"#515D71\",\n          size: 2,\n          border: {\n            color: \"black\"\n          }\n        }\n      };\n      binalar.renderer = {\n        type: \"simple\",\n        symbol: symbolbinalar\n      };\n      kapinumaralari.renderer = {\n        symbol: symbolkapino,\n        type: \"simple\"\n      };\n      var search = new Search({\n        view: this.view\n      });\n      var Katmanlar = new LayerList({\n        view: this.view\n      });\n      var LayerExpand = new Expand({\n        view: this.view,\n        content: Katmanlar\n      });\n      var legend = new Legend({\n        view: this.view,\n        layerInfos: [{\n          layer: map\n        }]\n      });\n      var LegendExpand = new Expand({\n        view: this.view,\n        content: legend\n      });\n      var SorguExpand = new Expand({\n        view: this.view,\n        content: document.getElementById(\"optionsDiv\")\n      });\n      var locateWidget = new Locate({\n        view: this.view,\n        graphic: new Graphic({\n          symbol: {\n            type: \"simple-marker\"\n          }\n        })\n      });\n      var query = yollar.createQuery();\n      query.where = \"ILCEADI = 'Menteşe'\";\n      query.outFields = [\"*\"];\n      query.returnGeometry = false;\n      yollar.queryFeatures(query).then(function (response) {\n        console.log(response);\n      });\n      var logovisible = document.getElementById(\"logoDiv\");\n      logovisible.style.display = \"block\";\n      this.view.ui.add(\"logoDiv\", \"bottom-right\");\n      this.view.ui.add(locateWidget, \"top-left\");\n      this.view.ui.add(search, \"top-right\");\n      this.view.ui.add(LegendExpand, \"top-right\");\n      this.view.ui.add(LayerExpand, \"top-right\");\n      this.view.ui.add(SorguExpand, \"top-right\");\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"webmap\",\n      ref: this.mapRef,\n      style: {\n        width: '100vw',\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"logoDiv\",\n      style: {\n        backgroundImage: \"url(\".concat(LogoImage, \")\"),\n        textAlign: 'center',\n        width: '90px',\n        height: '90px',\n        boxShadow: '0 0 0',\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"esri-widget\",\n      id: \"optionsDiv\",\n      style: {\n        padding: '10px',\n        width: '300px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Sorgu\"), React.createElement(\"select\", {\n      class: \"esri-select\",\n      id: \"attSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      className: \"item\",\n      value: \"ELEV_ft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"PROMINENCE_ft\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"\\u0130L\\xC7E\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      class: \"esri-select\",\n      id: \"signSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \">\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"MAHALLE\"), React.createElement(\"option\", {\n      value: \"<\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"is less than\"), React.createElement(\"option\", {\n      value: \"=\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"is equal to\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      class: \"esri-select\",\n      id: \"valSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"1000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"YOL\"), React.createElement(\"option\", {\n      value: \"5000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"5,000 ft\"), React.createElement(\"option\", {\n      value: \"10000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"10,000 ft\"), React.createElement(\"option\", {\n      value: \"15000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"15,000 ft\"), React.createElement(\"option\", {\n      value: \"20000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"20,000 ft\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      class: \"esri-button\",\n      id: \"doBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Sonu\\xE7lar\\u0131 G\\xF6ster\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/abidin/Desktop/arcgis/src/components/Arcgis3D.js"],"names":["React","LogoImage","loadModules","loadCss","WebMapView","Component","constructor","props","mapRef","createRef","componentDidMount","then","Map","WebScene","SceneView","SceneLayer","FeatureLayer","Search","Legend","Layer","LayerList","Collection","Expand","PopupTemplate","PortalItem","Locate","Graphic","Query","map","basemap","ground","yollar","title","url","outFields","popupTemplate","content","binalar","definitionExpression","kapinumaralari","elevationInfo","mode","screenSizePerspectiveEnabled","featureReduction","type","add","view","container","current","camera","position","x","y","z","tilt","symbolbinalar","symbolLayers","material","color","edges","symbolkapino","resource","href","size","outline","verticalOffset","screenLength","maxWorldLength","minWorldLength","callout","border","renderer","symbol","search","Katmanlar","LayerExpand","legend","layerInfos","layer","LegendExpand","SorguExpand","document","getElementById","locateWidget","graphic","query","createQuery","where","returnGeometry","queryFeatures","response","console","log","logovisible","style","display","ui","render","width","height","backgroundImage","textAlign","boxShadow","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport LogoImage from '../logo.png'\nimport { loadModules, loadCss } from 'esri-loader';\n\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n  }\n\n  componentDidMount() {\n    loadCss('https://js.arcgis.com/4.13/esri/themes/dark-blue/main.css');\n\n    loadModules([\n      'esri/Map',\n      'esri/WebScene',\n      'esri/views/SceneView',\n      'esri/layers/SceneLayer',\n      'esri/layers/FeatureLayer',\n      'esri/widgets/Search',\n      'esri/widgets/Legend',\n      'esri/layers/Layer',\n      'esri/widgets/LayerList',\n      'esri/core/Collection',\n      'esri/widgets/Expand',\n      \"esri/PopupTemplate\",\n      'esri/portal/PortalItem',\n      'esri/widgets/Locate',\n      'esri/Graphic',\n      'esri/tasks/support/Query'\n    ])\n      .then(([\n        Map,\n        WebScene,\n        SceneView,\n        SceneLayer,\n        FeatureLayer,\n        Search,\n        Legend,\n        Layer,\n        LayerList,\n        Collection,\n        Expand,\n        PopupTemplate,\n        PortalItem,\n        Locate,\n        Graphic,\n        Query\n      ]) => {\n        var map = new Map({\n          basemap: \"satellite\",\n          ground: \"world-elevation\"\n        });\n\n        var yollar = new FeatureLayer({\n          title: \"Yollar\",\n          url: \"https://muglacbs.mugla.bel.tr/cbs/rest/services/MABS/Mabs_View_Yol/MapServer/0\",\n          outFields: [\"YOLADI\", \"YOLTIP\"],\n          popupTemplate: {\n            title: \"Yol\",\n            content: \"<p>Yol Tipi : {YOLTIP}</p><p>Yol Adı : {YOLADI}</p>\"\n          },\n\n        });\n\n        var binalar = new SceneLayer({\n          title: \"Binalar\",\n          url: \"https://cbs.mugla.bel.tr/cbs/rest/services/Hosted/Yapilar3D_2/SceneServer\",\n          outFields: [\"KATADEDI\", \"AD\", \"KIMLIKNO\", \"TIP\", \"DURUM\"],\n          popupTemplate: {\n            title: \"Bina\",\n            content: \"<p>Tip : {TIP}</p><p>Durum : {DURUM}</p><p>Bina Adı : {AD}</p><p>Kimlik No : {KIMLIKNO}</p><p>Kat Adedi : {KATADEDI}</p>\"\n          },\n          definitionExpression: \"KATADEDI > 0\",\n\n        });\n\n        var kapinumaralari = new FeatureLayer({\n          title: \"Kapı Numaraları\",\n          url: \"https://muglacbs.mugla.bel.tr/cbs/rest/services/MABS/Mabs_View/MapServer/0\",\n          outFields: [\"ILCEADI\", \"MAHALLEADI\", \"YOLADI\", \"YOLTIPI\", \"KAPINO\"],\n          popupTemplate: {\n            title: \"Kapı Bilgileri\",\n            content: \"<p>İlçe : {ILCEADI}</p><p>Mahalle : {MAHALLEADI}</p><p>CSBM : {YOLADI}</p><p>Yol Tipi : {YOLTIPI}</p><p>Kapı No : {KAPINO}</p>\"\n          },\n          elevationInfo: {\n            mode: \"relative-to-scene\"\n          },\n          screenSizePerspectiveEnabled: false,\n          featureReduction: {\n            type: \"selection\"\n          },\n\n        });\n        map.add(binalar);\n        map.add(yollar);\n        map.add(kapinumaralari);\n\n        this.view = new SceneView({\n          container: this.mapRef.current,\n          map: map,\n          camera: {\n            position: {\n              x: 28.365316,\n              y: 37.150000,\n              z: 15000\n            },\n            tilt: 25\n          }\n        });\n\n        var symbolbinalar = {\n          type: \"mesh-3d\",\n          symbolLayers: [\n            {\n              type: \"fill\",\n              material: {\n                color: [255, 170, 2]\n              },\n              edges: {\n                type: \"solid\",\n                color: \"black\"\n              }\n            },\n          ]\n        };\n\n        var symbolkapino = {\n          type: \"point-3d\",\n          symbolLayers: [\n            {\n              type: \"icon\",\n              resource: {\n                href: \"/door.png\"\n              },\n              size: 25,\n              outline: {\n                color: \"black\",\n                size: 2\n              }\n            }\n          ],\n          verticalOffset: {\n            screenLength: 10,\n            maxWorldLength: 100,\n            minWorldLength: 35\n          },\n          callout: {\n            type: \"line\",\n            color: \"#515D71\",\n            size: 2,\n            border: {\n              color: \"black\"\n            }\n          }\n        };\n\n        binalar.renderer = {\n          type: \"simple\",\n          symbol: symbolbinalar\n        };\n\n        kapinumaralari.renderer = {\n          symbol: symbolkapino,\n          type: \"simple\"\n        };\n\n        var search = new Search({\n          view: this.view\n        });\n\n        var Katmanlar = new LayerList({\n          view: this.view,\n        });\n\n        var LayerExpand = new Expand({\n          view: this.view,\n          content: Katmanlar,\n        });\n\n        var legend = new Legend({\n          view: this.view,\n          layerInfos: [{\n            layer: map,\n          }]\n        });\n\n        var LegendExpand = new Expand({\n          view: this.view,\n          content: legend,\n        });\n\n        var SorguExpand = new Expand({\n          view: this.view,\n          content: document.getElementById(\"optionsDiv\"),\n        });\n\n        var locateWidget = new Locate({\n          view: this.view,\n          graphic: new Graphic({\n            symbol: { type: \"simple-marker\" }\n          })\n        });\n\n        var query = yollar.createQuery();\n        query.where = \"ILCEADI = 'Menteşe'\";\n        query.outFields = [\"*\"];\n        query.returnGeometry = false;\n\n\n        yollar.queryFeatures(query)\n          .then(function (response) {\n            console.log(response)\n          });\n\n        var logovisible = document.getElementById(\"logoDiv\")\n        logovisible.style.display = \"block\";\n\n        this.view.ui.add(\"logoDiv\", \"bottom-right\");\n        this.view.ui.add(locateWidget, \"top-left\");\n        this.view.ui.add(search, \"top-right\");\n        this.view.ui.add(LegendExpand, \"top-right\");\n        this.view.ui.add(LayerExpand, \"top-right\")\n        this.view.ui.add(SorguExpand, \"top-right\");\n\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"webmap\" ref={this.mapRef} style={{ width: '100vw', height: '100vh' }}>\n        <div id=\"logoDiv\" style={{\n          backgroundImage: `url(${LogoImage})`, textAlign: 'center',\n          width: '90px', height: '90px', boxShadow: '0 0 0', display: 'none'\n        }}>\n          <div class=\"esri-widget\" id=\"optionsDiv\" style={{ padding: '10px', width: '300px' }}>\n            <h3>Sorgu</h3>\n            <select class=\"esri-select\" id=\"attSelect\">\n              <option className=\"item\" value=\"ELEV_ft\"></option>\n              <option value=\"PROMINENCE_ft\" selected>İLÇE</option>\n            </select>\n            <br />\n            <select class=\"esri-select\" id=\"signSelect\">\n              <option value=\">\">MAHALLE</option>\n              <option value=\"<\">is less than</option>\n              <option value=\"=\">is equal to</option>\n            </select>\n            <br />\n            <select class=\"esri-select\" id=\"valSelect\">\n              <option value=\"1000\">YOL</option>\n              <option value=\"5000\">5,000 ft</option>\n              <option value=\"10000\">10,000 ft</option>\n              <option value=\"15000\">15,000 ft</option>\n              <option value=\"20000\">20,000 ft</option>\n            </select>\n            <br />\n            <button class=\"esri-button\" id=\"doBtn\">Sonuçları Göster</button>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}