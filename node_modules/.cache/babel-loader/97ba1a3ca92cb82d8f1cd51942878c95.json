{"ast":null,"code":"var _jsxFileName = \"/Users/abidin/Desktop/arcgis/src/components/WebMapView.js\";\nimport React from 'react';\nimport { loadModules, loadCss } from 'esri-loader';\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n  }\n\n  componentDidMount() {\n    loadCss('https://js.arcgis.com/4.13/esri/themes/dark-blue/main.css');\n    loadModules(['esri/WebScene', 'esri/views/SceneView', 'esri/widgets/Search', 'esri/widgets/Legend', 'esri/widgets/LayerList', 'esri/widgets/Expand']).then(([WebScene, SceneView, Search, Legend, LayerList, Expand]) => {\n      const map = new WebScene({\n        portalItem: {\n          // autocasts as new PortalItem()\n          id: \"ac68b33deea84c15bc26f408f3c413fd\",\n          portal: {\n            url: \"https://cbs.mugla.bel.tr/portal\"\n          }\n        }\n      });\n      this.view = new SceneView({\n        container: this.mapRef.current,\n        map: map\n      });\n      var search = new Search({\n        view: this.view\n      });\n      console.log(this.view);\n      var Katmanlar = new LayerList({\n        view: this.view\n      });\n      var LayerExpand = new Expand({\n        view: this.view,\n        content: Katmanlar\n      }); // Add the expand instance to the ui\n      // var legend = new Legend({\n      //   view: this.view,\n      //   layerInfos: [{\n      //     layer: map,\n      //     title: \"Legend\"\n      //   }]\n      // });\n      // legend.basemapLegendVisible = true;\n\n      this.view.ui.add(search, \"top-right\"); // this.view.ui.add(legend, \"buttom-right\");\n\n      this.view.ui.add(LayerExpand, \"top-right\");\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"webmap\",\n      ref: this.mapRef,\n      style: {\n        width: '100vw',\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/abidin/Desktop/arcgis/src/components/WebMapView.js"],"names":["React","loadModules","loadCss","WebMapView","Component","constructor","props","mapRef","createRef","componentDidMount","then","WebScene","SceneView","Search","Legend","LayerList","Expand","map","portalItem","id","portal","url","view","container","current","search","console","log","Katmanlar","LayerExpand","content","ui","add","render","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,aAArC;AAIA,OAAO,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAcP,KAAK,CAACQ,SAAN,EAAd;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBP,IAAAA,OAAO,CAAC,2DAAD,CAAP;AAEAD,IAAAA,WAAW,CAAC,CAAC,eAAD,EAAkB,sBAAlB,EAA0C,qBAA1C,EAAiE,qBAAjE,EAAwF,wBAAxF,EAAiH,qBAAjH,CAAD,CAAX,CACGS,IADH,CACQ,CAAC,CAACC,QAAD,EAAWC,SAAX,EAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,SAAtC,EAAgDC,MAAhD,CAAD,KAA6D;AACjE,YAAMC,GAAG,GAAG,IAAIN,QAAJ,CAAa;AACvBO,QAAAA,UAAU,EAAE;AACV;AACAC,UAAAA,EAAE,EAAE,kCAFM;AAGVC,UAAAA,MAAM,EAAE;AACNC,YAAAA,GAAG,EAAE;AADC;AAHE;AADW,OAAb,CAAZ;AAUA,WAAKC,IAAL,GAAY,IAAIV,SAAJ,CAAc;AACxBW,QAAAA,SAAS,EAAE,KAAKhB,MAAL,CAAYiB,OADC;AAExBP,QAAAA,GAAG,EAAEA;AAFmB,OAAd,CAAZ;AAKA,UAAIQ,MAAM,GAAG,IAAIZ,MAAJ,CAAW;AACtBS,QAAAA,IAAI,EAAE,KAAKA;AADW,OAAX,CAAb;AAKAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,IAAjB;AAEA,UAAIM,SAAS,GAAG,IAAIb,SAAJ,CAAc;AAAEO,QAAAA,IAAI,EAAE,KAAKA;AAAb,OAAd,CAAhB;AAEA,UAAIO,WAAW,GAAG,IAAIb,MAAJ,CAAW;AAC3BM,QAAAA,IAAI,EAAE,KAAKA,IADgB;AAE3BQ,QAAAA,OAAO,EAAEF;AAFkB,OAAX,CAAlB,CAzBiE,CA8BjE;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,WAAKN,IAAL,CAAUS,EAAV,CAAaC,GAAb,CAAiBP,MAAjB,EAAyB,WAAzB,EA1CiE,CA2CjE;;AACA,WAAKH,IAAL,CAAUS,EAAV,CAAaC,GAAb,CAAiBH,WAAjB,EAA8B,WAA9B;AAED,KA/CH;AAgDD;;AAEDI,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,GAAG,EAAE,KAAK1B,MAAlC;AAA0C,MAAA,KAAK,EAAE;AAAE2B,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA/D6C","sourcesContent":["import React from 'react';\nimport { loadModules, loadCss } from 'esri-loader';\n\n\n\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n  }\n\n  componentDidMount() {\n    loadCss('https://js.arcgis.com/4.13/esri/themes/dark-blue/main.css');\n\n    loadModules(['esri/WebScene', 'esri/views/SceneView', 'esri/widgets/Search', 'esri/widgets/Legend', 'esri/widgets/LayerList','esri/widgets/Expand'])\n      .then(([WebScene, SceneView, Search, Legend, LayerList,Expand]) => {\n        const map = new WebScene({\n          portalItem: {\n            // autocasts as new PortalItem()\n            id: \"ac68b33deea84c15bc26f408f3c413fd\",\n            portal: {\n              url: \"https://cbs.mugla.bel.tr/portal\"\n            },\n          }\n        });\n\n        this.view = new SceneView({\n          container: this.mapRef.current,\n          map: map,\n        });\n\n        var search = new Search({\n          view: this.view\n        });\n\n\n        console.log(this.view)\n\n        var Katmanlar = new LayerList({ view: this.view});\n\n        var LayerExpand = new Expand({\n          view: this.view,\n          content: Katmanlar,\n        });\n        \n        // Add the expand instance to the ui\n    \n\n        // var legend = new Legend({\n        //   view: this.view,\n        //   layerInfos: [{\n        //     layer: map,\n        //     title: \"Legend\"\n        //   }]\n        // });\n\n        // legend.basemapLegendVisible = true;\n        this.view.ui.add(search, \"top-right\");\n        // this.view.ui.add(legend, \"buttom-right\");\n        this.view.ui.add(LayerExpand, \"top-right\" );\n\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"webmap\" ref={this.mapRef} style={{ width: '100vw', height: '100vh' }} />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}