{"ast":null,"code":"var _jsxFileName = \"/Users/abidin/Desktop/arcgis/src/components/WebMapView.js\";\nimport React from 'react';\nimport { loadModules, loadCss } from 'esri-loader';\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n  }\n\n  componentDidMount() {\n    loadCss('https://js.arcgis.com/4.13/esri/themes/dark-blue/main.css');\n    loadModules(['esri/Map', 'esri/WebScene', 'esri/views/SceneView', 'esri/layers/SceneLayer', 'esri/layers/FeatureLayer', 'esri/widgets/Search', 'esri/widgets/Legend', 'esri/layers/Layer', 'esri/widgets/LayerList', 'esri/core/Collection', 'esri/widgets/Expand', \"esri/PopupTemplate\", 'esri/portal/PortalItem', 'esri/symbols/SimpleLineSymbol']).then(([Map, WebScene, SceneView, SceneLayer, FeatureLayer, Search, Legend, Layer, LayerList, Collection, Expand, PopupTemplate, PortalItem, SimpleLineSymbol]) => {\n      var map = new Map({\n        basemap: \"satellite\",\n        ground: \"world-elevation\"\n      });\n      var yollar = new FeatureLayer({\n        title: \"Yollar\",\n        url: \"https://muglacbs.mugla.bel.tr/cbs/rest/services/MABS/Mabs_View_Yol/MapServer/0\",\n        popupTemplate: {\n          title: \"Yol\",\n          content: \"Yol Content\"\n        }\n      });\n      map.add(yollar);\n      var binalar = new SceneLayer({\n        title: \"Binalar\",\n        url: \"https://cbs.mugla.bel.tr/cbs/rest/services/Hosted/Yapilar3D_2/SceneServer\",\n        // outFields: [\"KATADEDI\"],\n        // popupTemplate: {  // Enable a popup\n        //     title: \"Bina\", // Show attribute value\n        //     content: \"Kat Adedi : {KATADEDI}\" // Display in pop-up\n        // },\n        definitionExpression: \"KATADEDI > 0\"\n      });\n      map.add(binalar);\n      this.view = new SceneView({\n        container: this.mapRef.current,\n        map: map,\n        camera: {\n          position: {\n            x: 28.365316,\n            y: 37.150000,\n            z: 15000\n          },\n          tilt: 25\n        }\n      });\n      var symbolbinalar = {\n        type: \"mesh-3d\",\n        symbolLayers: [{\n          type: \"fill\",\n          material: {\n            color: [220, 154, 54]\n          }\n        }]\n      };\n      binalar.renderer = {\n        type: \"simple\",\n        symbol: symbolbinalar\n      };\n      var symbolyollar = {\n        type: \"simple-line\",\n        // autocasts as new SimpleLineSymbol()\n        color: \"lightblue\",\n        width: \"4px\"\n      };\n      yollar.renderer = {\n        type: \"simple\",\n        symbol: symbolyollar\n      };\n      var search = new Search({\n        view: this.view\n      });\n      var Katmanlar = new LayerList({\n        view: this.view\n      });\n      var LayerExpand = new Expand({\n        view: this.view,\n        content: Katmanlar\n      });\n      var legend = new Legend({\n        view: this.view,\n        layerInfos: [{\n          layer: map\n        }]\n      });\n      var LegendExpand = new Expand({\n        view: this.view,\n        content: legend\n      });\n      this.view.ui.add(search, \"top-right\");\n      this.view.ui.add(LegendExpand, \"top-right\");\n      this.view.ui.add(LayerExpand, \"top-right\");\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"webmap\",\n      ref: this.mapRef,\n      style: {\n        width: '100vw',\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/abidin/Desktop/arcgis/src/components/WebMapView.js"],"names":["React","loadModules","loadCss","WebMapView","Component","constructor","props","mapRef","createRef","componentDidMount","then","Map","WebScene","SceneView","SceneLayer","FeatureLayer","Search","Legend","Layer","LayerList","Collection","Expand","PopupTemplate","PortalItem","SimpleLineSymbol","map","basemap","ground","yollar","title","url","popupTemplate","content","add","binalar","definitionExpression","view","container","current","camera","position","x","y","z","tilt","symbolbinalar","type","symbolLayers","material","color","renderer","symbol","symbolyollar","width","search","Katmanlar","LayerExpand","legend","layerInfos","layer","LegendExpand","ui","render","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { loadModules, loadCss } from 'esri-loader';\n\n\n\nexport class WebMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n  }\n\n  componentDidMount() {\n    loadCss('https://js.arcgis.com/4.13/esri/themes/dark-blue/main.css');\n\n    loadModules([\n      'esri/Map',\n      'esri/WebScene',\n      'esri/views/SceneView',\n      'esri/layers/SceneLayer',\n      'esri/layers/FeatureLayer',\n      'esri/widgets/Search',\n      'esri/widgets/Legend',\n      'esri/layers/Layer',\n      'esri/widgets/LayerList',\n      'esri/core/Collection',\n      'esri/widgets/Expand',\n      \"esri/PopupTemplate\",\n      'esri/portal/PortalItem',\n      'esri/symbols/SimpleLineSymbol'\n    ])\n      .then(([\n        Map,\n        WebScene,\n        SceneView,\n        SceneLayer,\n        FeatureLayer,\n        Search,\n        Legend,\n        Layer,\n        LayerList,\n        Collection,\n        Expand,\n        PopupTemplate,\n        PortalItem,\n        SimpleLineSymbol\n      ]) => {\n        var map = new Map({\n          basemap: \"satellite\",\n          ground: \"world-elevation\"  \n        });\n\n        var yollar = new FeatureLayer({\n          title : \"Yollar\",\n          url: \"https://muglacbs.mugla.bel.tr/cbs/rest/services/MABS/Mabs_View_Yol/MapServer/0\",\n          popupTemplate: {  \n            title: \"Yol\",\n            content: \"Yol Content\" \n          },\n\n        });\n\n        map.add(yollar);\n\n        var binalar = new SceneLayer({\n          title: \"Binalar\",\n          url: \"https://cbs.mugla.bel.tr/cbs/rest/services/Hosted/Yapilar3D_2/SceneServer\",\n          // outFields: [\"KATADEDI\"],\n          // popupTemplate: {  // Enable a popup\n          //     title: \"Bina\", // Show attribute value\n          //     content: \"Kat Adedi : {KATADEDI}\" // Display in pop-up\n          // },\n          definitionExpression: \"KATADEDI > 0\",\n\n        });\n\n        map.add(binalar);\n\n        this.view = new SceneView({\n          container: this.mapRef.current,\n          map: map,\n          camera: {\n            position: { \n              x: 28.365316,\n              y: 37.150000,\n              z: 15000 \n            },\n            tilt: 25 \n          }\n        });\n\n        var symbolbinalar = {\n          type: \"mesh-3d\",\n          symbolLayers: [\n            {\n              type: \"fill\", \n              material: {\n                color: [220, 154, 54]\n              }\n            }\n          ]\n        };\n        \n        binalar.renderer = {\n          type: \"simple\", \n          symbol: symbolbinalar\n        };\n\n        var symbolyollar = {\n          type: \"simple-line\",  // autocasts as new SimpleLineSymbol()\n          color: \"lightblue\",\n          width: \"4px\",\n\n        };\n\n        yollar.renderer = {\n          type: \"simple\", \n          symbol: symbolyollar\n        };\n\n        var search = new Search({\n          view: this.view\n        });\n\n        var Katmanlar = new LayerList({\n          view: this.view,\n        });\n\n        var LayerExpand = new Expand({\n          view: this.view,\n          content: Katmanlar,\n        });\n\n        var legend = new Legend({\n          view: this.view,\n          layerInfos: [{\n            layer: map,\n          }]\n        });\n\n        var LegendExpand = new Expand({\n          view: this.view,\n          content: legend,\n        });\n\n        this.view.ui.add(search, \"top-right\");\n        this.view.ui.add(LegendExpand, \"top-right\");\n        this.view.ui.add(LayerExpand, \"top-right\")\n\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"webmap\" ref={this.mapRef} style={{ width: '100vw', height: '100vh' }} />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}